// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: odpf/optimus/plugins/v1beta1/cli.proto

package optimus

import (
	v1beta1 "github.com/odpf/optimus/api/proto/odpf/optimus/core/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PluginQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Prompt       string                        `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Help         string                        `protobuf:"bytes,3,opt,name=help,proto3" json:"help,omitempty"`
	Default      string                        `protobuf:"bytes,4,opt,name=default,proto3" json:"default,omitempty"`
	Multiselect  []string                      `protobuf:"bytes,5,rep,name=multiselect,proto3" json:"multiselect,omitempty"`
	SubQuestions []*PluginQuestion_SubQuestion `protobuf:"bytes,6,rep,name=sub_questions,json=subQuestions,proto3" json:"sub_questions,omitempty"`
}

func (x *PluginQuestion) Reset() {
	*x = PluginQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginQuestion) ProtoMessage() {}

func (x *PluginQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginQuestion.ProtoReflect.Descriptor instead.
func (*PluginQuestion) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{0}
}

func (x *PluginQuestion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginQuestion) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *PluginQuestion) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (x *PluginQuestion) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *PluginQuestion) GetMultiselect() []string {
	if x != nil {
		return x.Multiselect
	}
	return nil
}

func (x *PluginQuestion) GetSubQuestions() []*PluginQuestion_SubQuestion {
	if x != nil {
		return x.SubQuestions
	}
	return nil
}

type PluginAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question *PluginQuestion `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Value    string          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PluginAnswer) Reset() {
	*x = PluginAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginAnswer) ProtoMessage() {}

func (x *PluginAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginAnswer.ProtoReflect.Descriptor instead.
func (*PluginAnswer) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{1}
}

func (x *PluginAnswer) GetQuestion() *PluginQuestion {
	if x != nil {
		return x.Question
	}
	return nil
}

func (x *PluginAnswer) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobName string         `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	Options *PluginOptions `protobuf:"bytes,40,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *GetQuestionsRequest) Reset() {
	*x = GetQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsRequest) ProtoMessage() {}

func (x *GetQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{2}
}

func (x *GetQuestionsRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *GetQuestionsRequest) GetOptions() *PluginOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetQuestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*PluginQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetQuestionsResponse) Reset() {
	*x = GetQuestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsResponse) ProtoMessage() {}

func (x *GetQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuestionsResponse) GetQuestions() []*PluginQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type ValidateQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer  *PluginAnswer  `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	Options *PluginOptions `protobuf:"bytes,40,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *ValidateQuestionRequest) Reset() {
	*x = ValidateQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateQuestionRequest) ProtoMessage() {}

func (x *ValidateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateQuestionRequest.ProtoReflect.Descriptor instead.
func (*ValidateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateQuestionRequest) GetAnswer() *PluginAnswer {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *ValidateQuestionRequest) GetOptions() *PluginOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ValidateQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ValidateQuestionResponse) Reset() {
	*x = ValidateQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateQuestionResponse) ProtoMessage() {}

func (x *ValidateQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateQuestionResponse.ProtoReflect.Descriptor instead.
func (*ValidateQuestionResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateQuestionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ValidateQuestionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Configs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs []*Configs_Config `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
}

func (x *Configs) Reset() {
	*x = Configs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configs) ProtoMessage() {}

func (x *Configs) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configs.ProtoReflect.Descriptor instead.
func (*Configs) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{6}
}

func (x *Configs) GetConfigs() []*Configs_Config {
	if x != nil {
		return x.Configs
	}
	return nil
}

type DefaultConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answers []*PluginAnswer `protobuf:"bytes,1,rep,name=answers,proto3" json:"answers,omitempty"`
	Options *PluginOptions  `protobuf:"bytes,40,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *DefaultConfigRequest) Reset() {
	*x = DefaultConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfigRequest) ProtoMessage() {}

func (x *DefaultConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfigRequest.ProtoReflect.Descriptor instead.
func (*DefaultConfigRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{7}
}

func (x *DefaultConfigRequest) GetAnswers() []*PluginAnswer {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *DefaultConfigRequest) GetOptions() *PluginOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type DefaultConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Configs `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DefaultConfigResponse) Reset() {
	*x = DefaultConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfigResponse) ProtoMessage() {}

func (x *DefaultConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfigResponse.ProtoReflect.Descriptor instead.
func (*DefaultConfigResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{8}
}

func (x *DefaultConfigResponse) GetConfig() *Configs {
	if x != nil {
		return x.Config
	}
	return nil
}

type Assets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*Assets_Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *Assets) Reset() {
	*x = Assets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assets) ProtoMessage() {}

func (x *Assets) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assets.ProtoReflect.Descriptor instead.
func (*Assets) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{9}
}

func (x *Assets) GetAssets() []*Assets_Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type DefaultAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answers []*PluginAnswer `protobuf:"bytes,1,rep,name=answers,proto3" json:"answers,omitempty"`
	Options *PluginOptions  `protobuf:"bytes,40,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *DefaultAssetsRequest) Reset() {
	*x = DefaultAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultAssetsRequest) ProtoMessage() {}

func (x *DefaultAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultAssetsRequest.ProtoReflect.Descriptor instead.
func (*DefaultAssetsRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{10}
}

func (x *DefaultAssetsRequest) GetAnswers() []*PluginAnswer {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *DefaultAssetsRequest) GetOptions() *PluginOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type DefaultAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets *Assets `protobuf:"bytes,1,opt,name=assets,proto3" json:"assets,omitempty"`
}

func (x *DefaultAssetsResponse) Reset() {
	*x = DefaultAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultAssetsResponse) ProtoMessage() {}

func (x *DefaultAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultAssetsResponse.ProtoReflect.Descriptor instead.
func (*DefaultAssetsResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{11}
}

func (x *DefaultAssetsResponse) GetAssets() *Assets {
	if x != nil {
		return x.Assets
	}
	return nil
}

type CompileAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs *Configs `protobuf:"bytes,1,opt,name=configs,proto3" json:"configs,omitempty"`
	Assets  *Assets  `protobuf:"bytes,2,opt,name=assets,proto3" json:"assets,omitempty"`
	// Deprecated: Do not use.
	Window *v1beta1.TaskWindow `protobuf:"bytes,3,opt,name=window,proto3" json:"window,omitempty"`
	// Deprecated: Do not use.
	InstanceSchedule *timestamppb.Timestamp      `protobuf:"bytes,4,opt,name=instance_schedule,json=instanceSchedule,proto3" json:"instance_schedule,omitempty"`
	InstanceData     []*v1beta1.InstanceSpecData `protobuf:"bytes,5,rep,name=instance_data,json=instanceData,proto3" json:"instance_data,omitempty"`
	StartTime        *timestamppb.Timestamp      `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp      `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Options          *PluginOptions              `protobuf:"bytes,40,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *CompileAssetsRequest) Reset() {
	*x = CompileAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompileAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileAssetsRequest) ProtoMessage() {}

func (x *CompileAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileAssetsRequest.ProtoReflect.Descriptor instead.
func (*CompileAssetsRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{12}
}

func (x *CompileAssetsRequest) GetConfigs() *Configs {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *CompileAssetsRequest) GetAssets() *Assets {
	if x != nil {
		return x.Assets
	}
	return nil
}

// Deprecated: Do not use.
func (x *CompileAssetsRequest) GetWindow() *v1beta1.TaskWindow {
	if x != nil {
		return x.Window
	}
	return nil
}

// Deprecated: Do not use.
func (x *CompileAssetsRequest) GetInstanceSchedule() *timestamppb.Timestamp {
	if x != nil {
		return x.InstanceSchedule
	}
	return nil
}

func (x *CompileAssetsRequest) GetInstanceData() []*v1beta1.InstanceSpecData {
	if x != nil {
		return x.InstanceData
	}
	return nil
}

func (x *CompileAssetsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CompileAssetsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CompileAssetsRequest) GetOptions() *PluginOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type CompileAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets *Assets `protobuf:"bytes,1,opt,name=assets,proto3" json:"assets,omitempty"`
}

func (x *CompileAssetsResponse) Reset() {
	*x = CompileAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompileAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileAssetsResponse) ProtoMessage() {}

func (x *CompileAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileAssetsResponse.ProtoReflect.Descriptor instead.
func (*CompileAssetsResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{13}
}

func (x *CompileAssetsResponse) GetAssets() *Assets {
	if x != nil {
		return x.Assets
	}
	return nil
}

type PluginQuestion_SubQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfValue   string            `protobuf:"bytes,1,opt,name=if_value,json=ifValue,proto3" json:"if_value,omitempty"`
	Questions []*PluginQuestion `protobuf:"bytes,2,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *PluginQuestion_SubQuestion) Reset() {
	*x = PluginQuestion_SubQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginQuestion_SubQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginQuestion_SubQuestion) ProtoMessage() {}

func (x *PluginQuestion_SubQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginQuestion_SubQuestion.ProtoReflect.Descriptor instead.
func (*PluginQuestion_SubQuestion) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PluginQuestion_SubQuestion) GetIfValue() string {
	if x != nil {
		return x.IfValue
	}
	return ""
}

func (x *PluginQuestion_SubQuestion) GetQuestions() []*PluginQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type Configs_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Configs_Config) Reset() {
	*x = Configs_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configs_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configs_Config) ProtoMessage() {}

func (x *Configs_Config) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configs_Config.ProtoReflect.Descriptor instead.
func (*Configs_Config) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Configs_Config) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Configs_Config) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Assets_Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Assets_Asset) Reset() {
	*x = Assets_Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assets_Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assets_Asset) ProtoMessage() {}

func (x *Assets_Asset) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assets_Asset.ProtoReflect.Descriptor instead.
func (*Assets_Asset) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Assets_Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Assets_Asset) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_odpf_optimus_plugins_v1beta1_cli_proto protoreflect.FileDescriptor

var file_odpf_optimus_plugins_v1beta1_cli_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6f, 0x64, 0x70, 0x66, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2f, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63,
	0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6f, 0x64, 0x70, 0x66, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x27, 0x6f, 0x64, 0x70, 0x66, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2f, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x02, 0x0a, 0x0e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x5d, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75,
	0x62, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x74, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x66, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x66, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x4a, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6e, 0x0a,
	0x0c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x48, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x77, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x45, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x62, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x17, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x4a, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x85, 0x01,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x1a, 0x32, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44,
	0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x15, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x7f, 0x0a, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x42, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x1a, 0x31, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a,
	0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x15, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d,
	0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x22, 0xb0, 0x04, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x4b, 0x0a, 0x11,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x32, 0xf8, 0x04, 0x0a, 0x0d,
	0x43, 0x4c, 0x49, 0x4d, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x78, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x32, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d,
	0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f,
	0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x32, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4f, 0x0a, 0x1e, 0x69, 0x6f, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x42, 0x0b, 0x43, 0x4c, 0x49, 0x4d, 0x6f, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x64, 0x70, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescOnce sync.Once
	file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescData = file_odpf_optimus_plugins_v1beta1_cli_proto_rawDesc
)

func file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescGZIP() []byte {
	file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescOnce.Do(func() {
		file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescData = protoimpl.X.CompressGZIP(file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescData)
	})
	return file_odpf_optimus_plugins_v1beta1_cli_proto_rawDescData
}

var file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_odpf_optimus_plugins_v1beta1_cli_proto_goTypes = []interface{}{
	(*PluginQuestion)(nil),             // 0: odpf.optimus.plugins.v1beta1.PluginQuestion
	(*PluginAnswer)(nil),               // 1: odpf.optimus.plugins.v1beta1.PluginAnswer
	(*GetQuestionsRequest)(nil),        // 2: odpf.optimus.plugins.v1beta1.GetQuestionsRequest
	(*GetQuestionsResponse)(nil),       // 3: odpf.optimus.plugins.v1beta1.GetQuestionsResponse
	(*ValidateQuestionRequest)(nil),    // 4: odpf.optimus.plugins.v1beta1.ValidateQuestionRequest
	(*ValidateQuestionResponse)(nil),   // 5: odpf.optimus.plugins.v1beta1.ValidateQuestionResponse
	(*Configs)(nil),                    // 6: odpf.optimus.plugins.v1beta1.Configs
	(*DefaultConfigRequest)(nil),       // 7: odpf.optimus.plugins.v1beta1.DefaultConfigRequest
	(*DefaultConfigResponse)(nil),      // 8: odpf.optimus.plugins.v1beta1.DefaultConfigResponse
	(*Assets)(nil),                     // 9: odpf.optimus.plugins.v1beta1.Assets
	(*DefaultAssetsRequest)(nil),       // 10: odpf.optimus.plugins.v1beta1.DefaultAssetsRequest
	(*DefaultAssetsResponse)(nil),      // 11: odpf.optimus.plugins.v1beta1.DefaultAssetsResponse
	(*CompileAssetsRequest)(nil),       // 12: odpf.optimus.plugins.v1beta1.CompileAssetsRequest
	(*CompileAssetsResponse)(nil),      // 13: odpf.optimus.plugins.v1beta1.CompileAssetsResponse
	(*PluginQuestion_SubQuestion)(nil), // 14: odpf.optimus.plugins.v1beta1.PluginQuestion.SubQuestion
	(*Configs_Config)(nil),             // 15: odpf.optimus.plugins.v1beta1.Configs.Config
	(*Assets_Asset)(nil),               // 16: odpf.optimus.plugins.v1beta1.Assets.Asset
	(*PluginOptions)(nil),              // 17: odpf.optimus.plugins.v1beta1.PluginOptions
	(*v1beta1.TaskWindow)(nil),         // 18: odpf.optimus.core.v1beta1.TaskWindow
	(*timestamppb.Timestamp)(nil),      // 19: google.protobuf.Timestamp
	(*v1beta1.InstanceSpecData)(nil),   // 20: odpf.optimus.core.v1beta1.InstanceSpecData
}
var file_odpf_optimus_plugins_v1beta1_cli_proto_depIdxs = []int32{
	14, // 0: odpf.optimus.plugins.v1beta1.PluginQuestion.sub_questions:type_name -> odpf.optimus.plugins.v1beta1.PluginQuestion.SubQuestion
	0,  // 1: odpf.optimus.plugins.v1beta1.PluginAnswer.question:type_name -> odpf.optimus.plugins.v1beta1.PluginQuestion
	17, // 2: odpf.optimus.plugins.v1beta1.GetQuestionsRequest.options:type_name -> odpf.optimus.plugins.v1beta1.PluginOptions
	0,  // 3: odpf.optimus.plugins.v1beta1.GetQuestionsResponse.questions:type_name -> odpf.optimus.plugins.v1beta1.PluginQuestion
	1,  // 4: odpf.optimus.plugins.v1beta1.ValidateQuestionRequest.answer:type_name -> odpf.optimus.plugins.v1beta1.PluginAnswer
	17, // 5: odpf.optimus.plugins.v1beta1.ValidateQuestionRequest.options:type_name -> odpf.optimus.plugins.v1beta1.PluginOptions
	15, // 6: odpf.optimus.plugins.v1beta1.Configs.configs:type_name -> odpf.optimus.plugins.v1beta1.Configs.Config
	1,  // 7: odpf.optimus.plugins.v1beta1.DefaultConfigRequest.answers:type_name -> odpf.optimus.plugins.v1beta1.PluginAnswer
	17, // 8: odpf.optimus.plugins.v1beta1.DefaultConfigRequest.options:type_name -> odpf.optimus.plugins.v1beta1.PluginOptions
	6,  // 9: odpf.optimus.plugins.v1beta1.DefaultConfigResponse.config:type_name -> odpf.optimus.plugins.v1beta1.Configs
	16, // 10: odpf.optimus.plugins.v1beta1.Assets.assets:type_name -> odpf.optimus.plugins.v1beta1.Assets.Asset
	1,  // 11: odpf.optimus.plugins.v1beta1.DefaultAssetsRequest.answers:type_name -> odpf.optimus.plugins.v1beta1.PluginAnswer
	17, // 12: odpf.optimus.plugins.v1beta1.DefaultAssetsRequest.options:type_name -> odpf.optimus.plugins.v1beta1.PluginOptions
	9,  // 13: odpf.optimus.plugins.v1beta1.DefaultAssetsResponse.assets:type_name -> odpf.optimus.plugins.v1beta1.Assets
	6,  // 14: odpf.optimus.plugins.v1beta1.CompileAssetsRequest.configs:type_name -> odpf.optimus.plugins.v1beta1.Configs
	9,  // 15: odpf.optimus.plugins.v1beta1.CompileAssetsRequest.assets:type_name -> odpf.optimus.plugins.v1beta1.Assets
	18, // 16: odpf.optimus.plugins.v1beta1.CompileAssetsRequest.window:type_name -> odpf.optimus.core.v1beta1.TaskWindow
	19, // 17: odpf.optimus.plugins.v1beta1.CompileAssetsRequest.instance_schedule:type_name -> google.protobuf.Timestamp
	20, // 18: odpf.optimus.plugins.v1beta1.CompileAssetsRequest.instance_data:type_name -> odpf.optimus.core.v1beta1.InstanceSpecData
	19, // 19: odpf.optimus.plugins.v1beta1.CompileAssetsRequest.start_time:type_name -> google.protobuf.Timestamp
	19, // 20: odpf.optimus.plugins.v1beta1.CompileAssetsRequest.end_time:type_name -> google.protobuf.Timestamp
	17, // 21: odpf.optimus.plugins.v1beta1.CompileAssetsRequest.options:type_name -> odpf.optimus.plugins.v1beta1.PluginOptions
	9,  // 22: odpf.optimus.plugins.v1beta1.CompileAssetsResponse.assets:type_name -> odpf.optimus.plugins.v1beta1.Assets
	0,  // 23: odpf.optimus.plugins.v1beta1.PluginQuestion.SubQuestion.questions:type_name -> odpf.optimus.plugins.v1beta1.PluginQuestion
	2,  // 24: odpf.optimus.plugins.v1beta1.CLIModService.GetQuestions:input_type -> odpf.optimus.plugins.v1beta1.GetQuestionsRequest
	4,  // 25: odpf.optimus.plugins.v1beta1.CLIModService.ValidateQuestion:input_type -> odpf.optimus.plugins.v1beta1.ValidateQuestionRequest
	7,  // 26: odpf.optimus.plugins.v1beta1.CLIModService.DefaultConfig:input_type -> odpf.optimus.plugins.v1beta1.DefaultConfigRequest
	10, // 27: odpf.optimus.plugins.v1beta1.CLIModService.DefaultAssets:input_type -> odpf.optimus.plugins.v1beta1.DefaultAssetsRequest
	12, // 28: odpf.optimus.plugins.v1beta1.CLIModService.CompileAssets:input_type -> odpf.optimus.plugins.v1beta1.CompileAssetsRequest
	3,  // 29: odpf.optimus.plugins.v1beta1.CLIModService.GetQuestions:output_type -> odpf.optimus.plugins.v1beta1.GetQuestionsResponse
	5,  // 30: odpf.optimus.plugins.v1beta1.CLIModService.ValidateQuestion:output_type -> odpf.optimus.plugins.v1beta1.ValidateQuestionResponse
	8,  // 31: odpf.optimus.plugins.v1beta1.CLIModService.DefaultConfig:output_type -> odpf.optimus.plugins.v1beta1.DefaultConfigResponse
	11, // 32: odpf.optimus.plugins.v1beta1.CLIModService.DefaultAssets:output_type -> odpf.optimus.plugins.v1beta1.DefaultAssetsResponse
	13, // 33: odpf.optimus.plugins.v1beta1.CLIModService.CompileAssets:output_type -> odpf.optimus.plugins.v1beta1.CompileAssetsResponse
	29, // [29:34] is the sub-list for method output_type
	24, // [24:29] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_odpf_optimus_plugins_v1beta1_cli_proto_init() }
func file_odpf_optimus_plugins_v1beta1_cli_proto_init() {
	if File_odpf_optimus_plugins_v1beta1_cli_proto != nil {
		return
	}
	file_odpf_optimus_plugins_v1beta1_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompileAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompileAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginQuestion_SubQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configs_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assets_Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_odpf_optimus_plugins_v1beta1_cli_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_odpf_optimus_plugins_v1beta1_cli_proto_goTypes,
		DependencyIndexes: file_odpf_optimus_plugins_v1beta1_cli_proto_depIdxs,
		MessageInfos:      file_odpf_optimus_plugins_v1beta1_cli_proto_msgTypes,
	}.Build()
	File_odpf_optimus_plugins_v1beta1_cli_proto = out.File
	file_odpf_optimus_plugins_v1beta1_cli_proto_rawDesc = nil
	file_odpf_optimus_plugins_v1beta1_cli_proto_goTypes = nil
	file_odpf_optimus_plugins_v1beta1_cli_proto_depIdxs = nil
}
