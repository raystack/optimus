// Code generated by mockery v2.10.6. DO NOT EDIT.

package mock

import (
	"context"

	"github.com/stretchr/testify/mock"

	"github.com/raystack/optimus/client/extension/model"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// DownloadAsset provides a mock function with given fields: _a0, _a1
func (_m *Client) DownloadAsset(_a0 context.Context, _a1 string) ([]byte, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, string) []byte); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DownloadRelease provides a mock function with given fields: _a0, _a1
func (_m *Client) DownloadRelease(_a0 context.Context, _a1 string) (*model.RepositoryRelease, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *model.RepositoryRelease
	if rf, ok := ret.Get(0).(func(context.Context, string) *model.RepositoryRelease); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.RepositoryRelease)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
