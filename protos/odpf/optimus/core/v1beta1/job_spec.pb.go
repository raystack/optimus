// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: odpf/optimus/core/v1beta1/job_spec.proto

package optimus

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobEvent_Type int32

const (
	JobEvent_TYPE_UNSPECIFIED    JobEvent_Type = 0
	JobEvent_TYPE_SLA_MISS       JobEvent_Type = 1
	JobEvent_TYPE_FAILURE        JobEvent_Type = 2
	JobEvent_TYPE_SUCCESS        JobEvent_Type = 3
	JobEvent_TYPE_RETRY          JobEvent_Type = 4
	JobEvent_TYPE_JOB_START      JobEvent_Type = 5
	JobEvent_TYPE_JOB_SUCCESS    JobEvent_Type = 6
	JobEvent_TYPE_JOB_FAIL       JobEvent_Type = 7
	JobEvent_TYPE_TASK_RETRY     JobEvent_Type = 8
	JobEvent_TYPE_TASK_SUCCESS   JobEvent_Type = 9
	JobEvent_TYPE_TASK_START     JobEvent_Type = 10
	JobEvent_TYPE_TASK_FAIL      JobEvent_Type = 11
	JobEvent_TYPE_SENSOR_RETRY   JobEvent_Type = 12
	JobEvent_TYPE_SENSOR_SUCCESS JobEvent_Type = 13
	JobEvent_TYPE_SENSOR_START   JobEvent_Type = 14
	JobEvent_TYPE_SENSOR_FAIL    JobEvent_Type = 15
	JobEvent_TYPE_HOOK_START     JobEvent_Type = 16
	JobEvent_TYPE_HOOK_RETRY     JobEvent_Type = 17
	JobEvent_TYPE_HOOK_FAIL      JobEvent_Type = 18
	JobEvent_TYPE_HOOK_SUCCESS   JobEvent_Type = 19
)

// Enum value maps for JobEvent_Type.
var (
	JobEvent_Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		1:  "TYPE_SLA_MISS",
		2:  "TYPE_FAILURE",
		3:  "TYPE_SUCCESS",
		4:  "TYPE_RETRY",
		5:  "TYPE_JOB_START",
		6:  "TYPE_JOB_SUCCESS",
		7:  "TYPE_JOB_FAIL",
		8:  "TYPE_TASK_RETRY",
		9:  "TYPE_TASK_SUCCESS",
		10: "TYPE_TASK_START",
		11: "TYPE_TASK_FAIL",
		12: "TYPE_SENSOR_RETRY",
		13: "TYPE_SENSOR_SUCCESS",
		14: "TYPE_SENSOR_START",
		15: "TYPE_SENSOR_FAIL",
		16: "TYPE_HOOK_START",
		17: "TYPE_HOOK_RETRY",
		18: "TYPE_HOOK_FAIL",
		19: "TYPE_HOOK_SUCCESS",
	}
	JobEvent_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":    0,
		"TYPE_SLA_MISS":       1,
		"TYPE_FAILURE":        2,
		"TYPE_SUCCESS":        3,
		"TYPE_RETRY":          4,
		"TYPE_JOB_START":      5,
		"TYPE_JOB_SUCCESS":    6,
		"TYPE_JOB_FAIL":       7,
		"TYPE_TASK_RETRY":     8,
		"TYPE_TASK_SUCCESS":   9,
		"TYPE_TASK_START":     10,
		"TYPE_TASK_FAIL":      11,
		"TYPE_SENSOR_RETRY":   12,
		"TYPE_SENSOR_SUCCESS": 13,
		"TYPE_SENSOR_START":   14,
		"TYPE_SENSOR_FAIL":    15,
		"TYPE_HOOK_START":     16,
		"TYPE_HOOK_RETRY":     17,
		"TYPE_HOOK_FAIL":      18,
		"TYPE_HOOK_SUCCESS":   19,
	}
)

func (x JobEvent_Type) Enum() *JobEvent_Type {
	p := new(JobEvent_Type)
	*p = x
	return p
}

func (x JobEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_enumTypes[0].Descriptor()
}

func (JobEvent_Type) Type() protoreflect.EnumType {
	return &file_odpf_optimus_core_v1beta1_job_spec_proto_enumTypes[0]
}

func (x JobEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobEvent_Type.Descriptor instead.
func (JobEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{24, 0}
}

type DeployJobSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string              `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"` // unique project identifier
	Jobs          []*JobSpecification `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
	NamespaceName string              `protobuf:"bytes,4,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
}

func (x *DeployJobSpecificationRequest) Reset() {
	*x = DeployJobSpecificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployJobSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployJobSpecificationRequest) ProtoMessage() {}

func (x *DeployJobSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployJobSpecificationRequest.ProtoReflect.Descriptor instead.
func (*DeployJobSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{0}
}

func (x *DeployJobSpecificationRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *DeployJobSpecificationRequest) GetJobs() []*JobSpecification {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *DeployJobSpecificationRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

// DeployJobSpecificationResponse hold the value of DeploymentID
// and the log messages
type DeployJobSpecificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,7,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	LogStatus    *Log   `protobuf:"bytes,8,opt,name=log_status,json=logStatus,proto3" json:"log_status,omitempty"`
}

func (x *DeployJobSpecificationResponse) Reset() {
	*x = DeployJobSpecificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployJobSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployJobSpecificationResponse) ProtoMessage() {}

func (x *DeployJobSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployJobSpecificationResponse.ProtoReflect.Descriptor instead.
func (*DeployJobSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{1}
}

func (x *DeployJobSpecificationResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DeployJobSpecificationResponse) GetLogStatus() *Log {
	if x != nil {
		return x.LogStatus
	}
	return nil
}

type AddJobSpecificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string              `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceName string              `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	Specs         []*JobSpecification `protobuf:"bytes,3,rep,name=specs,proto3" json:"specs,omitempty"`
}

func (x *AddJobSpecificationsRequest) Reset() {
	*x = AddJobSpecificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJobSpecificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJobSpecificationsRequest) ProtoMessage() {}

func (x *AddJobSpecificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJobSpecificationsRequest.ProtoReflect.Descriptor instead.
func (*AddJobSpecificationsRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{2}
}

func (x *AddJobSpecificationsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *AddJobSpecificationsRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *AddJobSpecificationsRequest) GetSpecs() []*JobSpecification {
	if x != nil {
		return x.Specs
	}
	return nil
}

type AddJobSpecificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Log          string `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *AddJobSpecificationsResponse) Reset() {
	*x = AddJobSpecificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJobSpecificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJobSpecificationsResponse) ProtoMessage() {}

func (x *AddJobSpecificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJobSpecificationsResponse.ProtoReflect.Descriptor instead.
func (*AddJobSpecificationsResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{3}
}

func (x *AddJobSpecificationsResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *AddJobSpecificationsResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type JobInspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string            `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceName string            `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	JobName       string            `protobuf:"bytes,3,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	Spec          *JobSpecification `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *JobInspectRequest) Reset() {
	*x = JobInspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInspectRequest) ProtoMessage() {}

func (x *JobInspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInspectRequest.ProtoReflect.Descriptor instead.
func (*JobInspectRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{4}
}

func (x *JobInspectRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *JobInspectRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *JobInspectRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobInspectRequest) GetSpec() *JobSpecification {
	if x != nil {
		return x.Spec
	}
	return nil
}

type OptimusDependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Host          string            `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	ProjectName   string            `protobuf:"bytes,3,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceName string            `protobuf:"bytes,4,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	TaskName      string            `protobuf:"bytes,5,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Headers       map[string]string `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OptimusDependency) Reset() {
	*x = OptimusDependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimusDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimusDependency) ProtoMessage() {}

func (x *OptimusDependency) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimusDependency.ProtoReflect.Descriptor instead.
func (*OptimusDependency) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{5}
}

func (x *OptimusDependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OptimusDependency) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *OptimusDependency) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *OptimusDependency) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *OptimusDependency) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *OptimusDependency) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type JobInspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo   *JobInspectResponse_BasicInfoSection  `protobuf:"bytes,1,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
	Upstreams   *JobInspectResponse_UpstreamSection   `protobuf:"bytes,2,opt,name=upstreams,proto3" json:"upstreams,omitempty"`
	Downstreams *JobInspectResponse_DownstreamSection `protobuf:"bytes,3,opt,name=downstreams,proto3" json:"downstreams,omitempty"`
}

func (x *JobInspectResponse) Reset() {
	*x = JobInspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInspectResponse) ProtoMessage() {}

func (x *JobInspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInspectResponse.ProtoReflect.Descriptor instead.
func (*JobInspectResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{6}
}

func (x *JobInspectResponse) GetBasicInfo() *JobInspectResponse_BasicInfoSection {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *JobInspectResponse) GetUpstreams() *JobInspectResponse_UpstreamSection {
	if x != nil {
		return x.Upstreams
	}
	return nil
}

func (x *JobInspectResponse) GetDownstreams() *JobInspectResponse_DownstreamSection {
	if x != nil {
		return x.Downstreams
	}
	return nil
}

type CreateJobSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string            `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceName string            `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	Spec          *JobSpecification `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateJobSpecificationRequest) Reset() {
	*x = CreateJobSpecificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobSpecificationRequest) ProtoMessage() {}

func (x *CreateJobSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobSpecificationRequest.ProtoReflect.Descriptor instead.
func (*CreateJobSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{7}
}

func (x *CreateJobSpecificationRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CreateJobSpecificationRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *CreateJobSpecificationRequest) GetSpec() *JobSpecification {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateJobSpecificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateJobSpecificationResponse) Reset() {
	*x = CreateJobSpecificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobSpecificationResponse) ProtoMessage() {}

func (x *CreateJobSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobSpecificationResponse.ProtoReflect.Descriptor instead.
func (*CreateJobSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{8}
}

func (x *CreateJobSpecificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateJobSpecificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetJobSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	JobName       string `protobuf:"bytes,3,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
}

func (x *GetJobSpecificationRequest) Reset() {
	*x = GetJobSpecificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobSpecificationRequest) ProtoMessage() {}

func (x *GetJobSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobSpecificationRequest.ProtoReflect.Descriptor instead.
func (*GetJobSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{9}
}

func (x *GetJobSpecificationRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GetJobSpecificationRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *GetJobSpecificationRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

type GetJobSpecificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec *JobSpecification `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *GetJobSpecificationResponse) Reset() {
	*x = GetJobSpecificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobSpecificationResponse) ProtoMessage() {}

func (x *GetJobSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobSpecificationResponse.ProtoReflect.Descriptor instead.
func (*GetJobSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{10}
}

func (x *GetJobSpecificationResponse) GetSpec() *JobSpecification {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DeleteJobSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	JobName       string `protobuf:"bytes,3,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
}

func (x *DeleteJobSpecificationRequest) Reset() {
	*x = DeleteJobSpecificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobSpecificationRequest) ProtoMessage() {}

func (x *DeleteJobSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobSpecificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteJobSpecificationRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *DeleteJobSpecificationRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *DeleteJobSpecificationRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

type DeleteJobSpecificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteJobSpecificationResponse) Reset() {
	*x = DeleteJobSpecificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobSpecificationResponse) ProtoMessage() {}

func (x *DeleteJobSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobSpecificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteJobSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteJobSpecificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteJobSpecificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListJobSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
}

func (x *ListJobSpecificationRequest) Reset() {
	*x = ListJobSpecificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobSpecificationRequest) ProtoMessage() {}

func (x *ListJobSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobSpecificationRequest.ProtoReflect.Descriptor instead.
func (*ListJobSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{13}
}

func (x *ListJobSpecificationRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ListJobSpecificationRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

type ListJobSpecificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobSpecification `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *ListJobSpecificationResponse) Reset() {
	*x = ListJobSpecificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobSpecificationResponse) ProtoMessage() {}

func (x *ListJobSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobSpecificationResponse.ProtoReflect.Descriptor instead.
func (*ListJobSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{14}
}

func (x *ListJobSpecificationResponse) GetJobs() []*JobSpecification {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type CheckJobSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string            `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Job           *JobSpecification `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	NamespaceName string            `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
}

func (x *CheckJobSpecificationRequest) Reset() {
	*x = CheckJobSpecificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckJobSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckJobSpecificationRequest) ProtoMessage() {}

func (x *CheckJobSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckJobSpecificationRequest.ProtoReflect.Descriptor instead.
func (*CheckJobSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{15}
}

func (x *CheckJobSpecificationRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CheckJobSpecificationRequest) GetJob() *JobSpecification {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *CheckJobSpecificationRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

type CheckJobSpecificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CheckJobSpecificationResponse) Reset() {
	*x = CheckJobSpecificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckJobSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckJobSpecificationResponse) ProtoMessage() {}

func (x *CheckJobSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckJobSpecificationResponse.ProtoReflect.Descriptor instead.
func (*CheckJobSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{16}
}

func (x *CheckJobSpecificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CheckJobSpecificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string              `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Jobs          []*JobSpecification `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
	NamespaceName string              `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
}

func (x *CheckJobSpecificationsRequest) Reset() {
	*x = CheckJobSpecificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckJobSpecificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckJobSpecificationsRequest) ProtoMessage() {}

func (x *CheckJobSpecificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckJobSpecificationsRequest.ProtoReflect.Descriptor instead.
func (*CheckJobSpecificationsRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{17}
}

func (x *CheckJobSpecificationsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CheckJobSpecificationsRequest) GetJobs() []*JobSpecification {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *CheckJobSpecificationsRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

type CheckJobSpecificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogStatus *Log `protobuf:"bytes,5,opt,name=log_status,json=logStatus,proto3" json:"log_status,omitempty"`
}

func (x *CheckJobSpecificationsResponse) Reset() {
	*x = CheckJobSpecificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckJobSpecificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckJobSpecificationsResponse) ProtoMessage() {}

func (x *CheckJobSpecificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckJobSpecificationsResponse.ProtoReflect.Descriptor instead.
func (*CheckJobSpecificationsResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{18}
}

func (x *CheckJobSpecificationsResponse) GetLogStatus() *Log {
	if x != nil {
		return x.LogStatus
	}
	return nil
}

type JobSpecification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version          int32                      `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Name             string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner            string                     `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	StartDate        string                     `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate          string                     `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"` // optional
	Interval         string                     `protobuf:"bytes,6,opt,name=interval,proto3" json:"interval,omitempty"`
	DependsOnPast    bool                       `protobuf:"varint,7,opt,name=depends_on_past,json=dependsOnPast,proto3" json:"depends_on_past,omitempty"` // should only execute today if yesterday was completed with success?
	CatchUp          bool                       `protobuf:"varint,8,opt,name=catch_up,json=catchUp,proto3" json:"catch_up,omitempty"`                     // should backfill till today?
	TaskName         string                     `protobuf:"bytes,9,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Config           []*JobConfigItem           `protobuf:"bytes,10,rep,name=config,proto3" json:"config,omitempty"`
	WindowSize       string                     `protobuf:"bytes,11,opt,name=window_size,json=windowSize,proto3" json:"window_size,omitempty"`
	WindowOffset     string                     `protobuf:"bytes,12,opt,name=window_offset,json=windowOffset,proto3" json:"window_offset,omitempty"`
	WindowTruncateTo string                     `protobuf:"bytes,13,opt,name=window_truncate_to,json=windowTruncateTo,proto3" json:"window_truncate_to,omitempty"`
	Dependencies     []*JobDependency           `protobuf:"bytes,14,rep,name=dependencies,proto3" json:"dependencies,omitempty"` // static dependencies
	Assets           map[string]string          `protobuf:"bytes,15,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Hooks            []*JobSpecHook             `protobuf:"bytes,16,rep,name=hooks,proto3" json:"hooks,omitempty"`             // optional
	Description      string                     `protobuf:"bytes,17,opt,name=description,proto3" json:"description,omitempty"` // optional
	Labels           map[string]string          `protobuf:"bytes,18,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Behavior         *JobSpecification_Behavior `protobuf:"bytes,19,opt,name=behavior,proto3" json:"behavior,omitempty"`
	Metadata         *JobMetadata               `protobuf:"bytes,20,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *JobSpecification) Reset() {
	*x = JobSpecification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecification) ProtoMessage() {}

func (x *JobSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecification.ProtoReflect.Descriptor instead.
func (*JobSpecification) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{19}
}

func (x *JobSpecification) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *JobSpecification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobSpecification) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *JobSpecification) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *JobSpecification) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *JobSpecification) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *JobSpecification) GetDependsOnPast() bool {
	if x != nil {
		return x.DependsOnPast
	}
	return false
}

func (x *JobSpecification) GetCatchUp() bool {
	if x != nil {
		return x.CatchUp
	}
	return false
}

func (x *JobSpecification) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *JobSpecification) GetConfig() []*JobConfigItem {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *JobSpecification) GetWindowSize() string {
	if x != nil {
		return x.WindowSize
	}
	return ""
}

func (x *JobSpecification) GetWindowOffset() string {
	if x != nil {
		return x.WindowOffset
	}
	return ""
}

func (x *JobSpecification) GetWindowTruncateTo() string {
	if x != nil {
		return x.WindowTruncateTo
	}
	return ""
}

func (x *JobSpecification) GetDependencies() []*JobDependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *JobSpecification) GetAssets() map[string]string {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *JobSpecification) GetHooks() []*JobSpecHook {
	if x != nil {
		return x.Hooks
	}
	return nil
}

func (x *JobSpecification) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *JobSpecification) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *JobSpecification) GetBehavior() *JobSpecification_Behavior {
	if x != nil {
		return x.Behavior
	}
	return nil
}

func (x *JobSpecification) GetMetadata() *JobMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type JobDependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type           string          `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                           // intra/inter/extra
	HttpDependency *HttpDependency `protobuf:"bytes,3,opt,name=http_dependency,json=httpDependency,proto3" json:"http_dependency,omitempty"` // http sensor dependency
}

func (x *JobDependency) Reset() {
	*x = JobDependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDependency) ProtoMessage() {}

func (x *JobDependency) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDependency.ProtoReflect.Descriptor instead.
func (*JobDependency) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{20}
}

func (x *JobDependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobDependency) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *JobDependency) GetHttpDependency() *HttpDependency {
	if x != nil {
		return x.HttpDependency
	}
	return nil
}

type HttpDependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url     string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Params  map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HttpDependency) Reset() {
	*x = HttpDependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpDependency) ProtoMessage() {}

func (x *HttpDependency) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpDependency.ProtoReflect.Descriptor instead.
func (*HttpDependency) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{21}
}

func (x *HttpDependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HttpDependency) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpDependency) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpDependency) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type JobSpecHook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config []*JobConfigItem `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty"`
}

func (x *JobSpecHook) Reset() {
	*x = JobSpecHook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecHook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecHook) ProtoMessage() {}

func (x *JobSpecHook) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecHook.ProtoReflect.Descriptor instead.
func (*JobSpecHook) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{22}
}

func (x *JobSpecHook) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobSpecHook) GetConfig() []*JobConfigItem {
	if x != nil {
		return x.Config
	}
	return nil
}

type JobConfigItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *JobConfigItem) Reset() {
	*x = JobConfigItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobConfigItem) ProtoMessage() {}

func (x *JobConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobConfigItem.ProtoReflect.Descriptor instead.
func (*JobConfigItem) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{23}
}

func (x *JobConfigItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobConfigItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type JobEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  JobEvent_Type    `protobuf:"varint,1,opt,name=type,proto3,enum=odpf.optimus.core.v1beta1.JobEvent_Type" json:"type,omitempty"`
	Value *structpb.Struct `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *JobEvent) Reset() {
	*x = JobEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEvent) ProtoMessage() {}

func (x *JobEvent) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEvent.ProtoReflect.Descriptor instead.
func (*JobEvent) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{24}
}

func (x *JobEvent) GetType() JobEvent_Type {
	if x != nil {
		return x.Type
	}
	return JobEvent_TYPE_UNSPECIFIED
}

func (x *JobEvent) GetValue() *structpb.Struct {
	if x != nil {
		return x.Value
	}
	return nil
}

type JobMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *JobSpecMetadataResource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Airflow  *JobSpecMetadataAirflow  `protobuf:"bytes,2,opt,name=airflow,proto3" json:"airflow,omitempty"`
}

func (x *JobMetadata) Reset() {
	*x = JobMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetadata) ProtoMessage() {}

func (x *JobMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetadata.ProtoReflect.Descriptor instead.
func (*JobMetadata) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{25}
}

func (x *JobMetadata) GetResource() *JobSpecMetadataResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *JobMetadata) GetAirflow() *JobSpecMetadataAirflow {
	if x != nil {
		return x.Airflow
	}
	return nil
}

type JobSpecMetadataResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *JobSpecMetadataResourceConfig `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Limit   *JobSpecMetadataResourceConfig `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *JobSpecMetadataResource) Reset() {
	*x = JobSpecMetadataResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecMetadataResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecMetadataResource) ProtoMessage() {}

func (x *JobSpecMetadataResource) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecMetadataResource.ProtoReflect.Descriptor instead.
func (*JobSpecMetadataResource) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{26}
}

func (x *JobSpecMetadataResource) GetRequest() *JobSpecMetadataResourceConfig {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *JobSpecMetadataResource) GetLimit() *JobSpecMetadataResourceConfig {
	if x != nil {
		return x.Limit
	}
	return nil
}

type JobSpecMetadataResourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu    string `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory string `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *JobSpecMetadataResourceConfig) Reset() {
	*x = JobSpecMetadataResourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecMetadataResourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecMetadataResourceConfig) ProtoMessage() {}

func (x *JobSpecMetadataResourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecMetadataResourceConfig.ProtoReflect.Descriptor instead.
func (*JobSpecMetadataResourceConfig) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{27}
}

func (x *JobSpecMetadataResourceConfig) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *JobSpecMetadataResourceConfig) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

type JobSpecMetadataAirflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool  string `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	Queue string `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
}

func (x *JobSpecMetadataAirflow) Reset() {
	*x = JobSpecMetadataAirflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecMetadataAirflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecMetadataAirflow) ProtoMessage() {}

func (x *JobSpecMetadataAirflow) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecMetadataAirflow.ProtoReflect.Descriptor instead.
func (*JobSpecMetadataAirflow) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{28}
}

func (x *JobSpecMetadataAirflow) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *JobSpecMetadataAirflow) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type RefreshJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName    string   `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceNames []string `protobuf:"bytes,2,rep,name=namespace_names,json=namespaceNames,proto3" json:"namespace_names,omitempty"`
	JobNames       []string `protobuf:"bytes,3,rep,name=job_names,json=jobNames,proto3" json:"job_names,omitempty"`
}

func (x *RefreshJobsRequest) Reset() {
	*x = RefreshJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshJobsRequest) ProtoMessage() {}

func (x *RefreshJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshJobsRequest.ProtoReflect.Descriptor instead.
func (*RefreshJobsRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{29}
}

func (x *RefreshJobsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *RefreshJobsRequest) GetNamespaceNames() []string {
	if x != nil {
		return x.NamespaceNames
	}
	return nil
}

func (x *RefreshJobsRequest) GetJobNames() []string {
	if x != nil {
		return x.JobNames
	}
	return nil
}

type RefreshJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,5,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	LogStatus    *Log   `protobuf:"bytes,6,opt,name=log_status,json=logStatus,proto3" json:"log_status,omitempty"`
}

func (x *RefreshJobsResponse) Reset() {
	*x = RefreshJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshJobsResponse) ProtoMessage() {}

func (x *RefreshJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshJobsResponse.ProtoReflect.Descriptor instead.
func (*RefreshJobsResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{30}
}

func (x *RefreshJobsResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *RefreshJobsResponse) GetLogStatus() *Log {
	if x != nil {
		return x.LogStatus
	}
	return nil
}

type GetDeployJobsStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployId string `protobuf:"bytes,1,opt,name=deploy_id,json=deployId,proto3" json:"deploy_id,omitempty"`
}

func (x *GetDeployJobsStatusRequest) Reset() {
	*x = GetDeployJobsStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeployJobsStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployJobsStatusRequest) ProtoMessage() {}

func (x *GetDeployJobsStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployJobsStatusRequest.ProtoReflect.Descriptor instead.
func (*GetDeployJobsStatusRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{31}
}

func (x *GetDeployJobsStatusRequest) GetDeployId() string {
	if x != nil {
		return x.DeployId
	}
	return ""
}

type GetDeployJobsStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status              string              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Failures            []*DeployJobFailure `protobuf:"bytes,2,rep,name=failures,proto3" json:"failures,omitempty"`
	SuccessCount        int32               `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailureCount        int32               `protobuf:"varint,4,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	UnknownDependencies map[string]string   `protobuf:"bytes,5,rep,name=unknown_dependencies,json=unknownDependencies,proto3" json:"unknown_dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetDeployJobsStatusResponse) Reset() {
	*x = GetDeployJobsStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeployJobsStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployJobsStatusResponse) ProtoMessage() {}

func (x *GetDeployJobsStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployJobsStatusResponse.ProtoReflect.Descriptor instead.
func (*GetDeployJobsStatusResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{32}
}

func (x *GetDeployJobsStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDeployJobsStatusResponse) GetFailures() []*DeployJobFailure {
	if x != nil {
		return x.Failures
	}
	return nil
}

func (x *GetDeployJobsStatusResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *GetDeployJobsStatusResponse) GetFailureCount() int32 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

func (x *GetDeployJobsStatusResponse) GetUnknownDependencies() map[string]string {
	if x != nil {
		return x.UnknownDependencies
	}
	return nil
}

type DeployJobFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeployJobFailure) Reset() {
	*x = DeployJobFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployJobFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployJobFailure) ProtoMessage() {}

func (x *DeployJobFailure) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployJobFailure.ProtoReflect.Descriptor instead.
func (*DeployJobFailure) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{33}
}

func (x *DeployJobFailure) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *DeployJobFailure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetJobSpecificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName         string `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	ResourceDestination string `protobuf:"bytes,2,opt,name=resource_destination,json=resourceDestination,proto3" json:"resource_destination,omitempty"`
	JobName             string `protobuf:"bytes,3,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
}

func (x *GetJobSpecificationsRequest) Reset() {
	*x = GetJobSpecificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobSpecificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobSpecificationsRequest) ProtoMessage() {}

func (x *GetJobSpecificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobSpecificationsRequest.ProtoReflect.Descriptor instead.
func (*GetJobSpecificationsRequest) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{34}
}

func (x *GetJobSpecificationsRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GetJobSpecificationsRequest) GetResourceDestination() string {
	if x != nil {
		return x.ResourceDestination
	}
	return ""
}

func (x *GetJobSpecificationsRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

type GetJobSpecificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Jobs                      []*JobSpecification         `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	JobSpecificationResponses []*JobSpecificationResponse `protobuf:"bytes,2,rep,name=job_specification_responses,json=jobSpecificationResponses,proto3" json:"job_specification_responses,omitempty"`
}

func (x *GetJobSpecificationsResponse) Reset() {
	*x = GetJobSpecificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobSpecificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobSpecificationsResponse) ProtoMessage() {}

func (x *GetJobSpecificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobSpecificationsResponse.ProtoReflect.Descriptor instead.
func (*GetJobSpecificationsResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{35}
}

// Deprecated: Do not use.
func (x *GetJobSpecificationsResponse) GetJobs() []*JobSpecification {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *GetJobSpecificationsResponse) GetJobSpecificationResponses() []*JobSpecificationResponse {
	if x != nil {
		return x.JobSpecificationResponses
	}
	return nil
}

type JobSpecificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName   string            `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	NamespaceName string            `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	Job           *JobSpecification `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobSpecificationResponse) Reset() {
	*x = JobSpecificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecificationResponse) ProtoMessage() {}

func (x *JobSpecificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecificationResponse.ProtoReflect.Descriptor instead.
func (*JobSpecificationResponse) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{36}
}

func (x *JobSpecificationResponse) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *JobSpecificationResponse) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *JobSpecificationResponse) GetJob() *JobSpecification {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobInspectResponse_BasicInfoSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job         *JobSpecification `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Source      []string          `protobuf:"bytes,2,rep,name=source,proto3" json:"source,omitempty"`
	Destination string            `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Notice      []*Log            `protobuf:"bytes,4,rep,name=notice,proto3" json:"notice,omitempty"`
}

func (x *JobInspectResponse_BasicInfoSection) Reset() {
	*x = JobInspectResponse_BasicInfoSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInspectResponse_BasicInfoSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInspectResponse_BasicInfoSection) ProtoMessage() {}

func (x *JobInspectResponse_BasicInfoSection) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInspectResponse_BasicInfoSection.ProtoReflect.Descriptor instead.
func (*JobInspectResponse_BasicInfoSection) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{6, 0}
}

func (x *JobInspectResponse_BasicInfoSection) GetJob() *JobSpecification {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobInspectResponse_BasicInfoSection) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *JobInspectResponse_BasicInfoSection) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *JobInspectResponse_BasicInfoSection) GetNotice() []*Log {
	if x != nil {
		return x.Notice
	}
	return nil
}

type JobInspectResponse_UpstreamSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalDependency  []*OptimusDependency                                      `protobuf:"bytes,1,rep,name=external_dependency,json=externalDependency,proto3" json:"external_dependency,omitempty"`
	InternalDependency  []*OptimusDependency                                      `protobuf:"bytes,2,rep,name=internal_dependency,json=internalDependency,proto3" json:"internal_dependency,omitempty"`
	HttpDependency      []*HttpDependency                                         `protobuf:"bytes,3,rep,name=http_dependency,json=httpDependency,proto3" json:"http_dependency,omitempty"`
	UnknownDependencies []*JobInspectResponse_UpstreamSection_UnknownDependencies `protobuf:"bytes,4,rep,name=unknown_dependencies,json=unknownDependencies,proto3" json:"unknown_dependencies,omitempty"`
	Notice              []*Log                                                    `protobuf:"bytes,5,rep,name=notice,proto3" json:"notice,omitempty"`
}

func (x *JobInspectResponse_UpstreamSection) Reset() {
	*x = JobInspectResponse_UpstreamSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInspectResponse_UpstreamSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInspectResponse_UpstreamSection) ProtoMessage() {}

func (x *JobInspectResponse_UpstreamSection) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInspectResponse_UpstreamSection.ProtoReflect.Descriptor instead.
func (*JobInspectResponse_UpstreamSection) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{6, 1}
}

func (x *JobInspectResponse_UpstreamSection) GetExternalDependency() []*OptimusDependency {
	if x != nil {
		return x.ExternalDependency
	}
	return nil
}

func (x *JobInspectResponse_UpstreamSection) GetInternalDependency() []*OptimusDependency {
	if x != nil {
		return x.InternalDependency
	}
	return nil
}

func (x *JobInspectResponse_UpstreamSection) GetHttpDependency() []*HttpDependency {
	if x != nil {
		return x.HttpDependency
	}
	return nil
}

func (x *JobInspectResponse_UpstreamSection) GetUnknownDependencies() []*JobInspectResponse_UpstreamSection_UnknownDependencies {
	if x != nil {
		return x.UnknownDependencies
	}
	return nil
}

func (x *JobInspectResponse_UpstreamSection) GetNotice() []*Log {
	if x != nil {
		return x.Notice
	}
	return nil
}

type JobInspectResponse_DownstreamSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownstreamJobs []*OptimusDependency `protobuf:"bytes,1,rep,name=downstream_jobs,json=downstreamJobs,proto3" json:"downstream_jobs,omitempty"`
	Notice         []*Log               `protobuf:"bytes,2,rep,name=notice,proto3" json:"notice,omitempty"`
}

func (x *JobInspectResponse_DownstreamSection) Reset() {
	*x = JobInspectResponse_DownstreamSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInspectResponse_DownstreamSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInspectResponse_DownstreamSection) ProtoMessage() {}

func (x *JobInspectResponse_DownstreamSection) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInspectResponse_DownstreamSection.ProtoReflect.Descriptor instead.
func (*JobInspectResponse_DownstreamSection) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{6, 2}
}

func (x *JobInspectResponse_DownstreamSection) GetDownstreamJobs() []*OptimusDependency {
	if x != nil {
		return x.DownstreamJobs
	}
	return nil
}

func (x *JobInspectResponse_DownstreamSection) GetNotice() []*Log {
	if x != nil {
		return x.Notice
	}
	return nil
}

type JobInspectResponse_UpstreamSection_UnknownDependencies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobName     string `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *JobInspectResponse_UpstreamSection_UnknownDependencies) Reset() {
	*x = JobInspectResponse_UpstreamSection_UnknownDependencies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInspectResponse_UpstreamSection_UnknownDependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInspectResponse_UpstreamSection_UnknownDependencies) ProtoMessage() {}

func (x *JobInspectResponse_UpstreamSection_UnknownDependencies) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInspectResponse_UpstreamSection_UnknownDependencies.ProtoReflect.Descriptor instead.
func (*JobInspectResponse_UpstreamSection_UnknownDependencies) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{6, 1, 0}
}

func (x *JobInspectResponse_UpstreamSection_UnknownDependencies) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobInspectResponse_UpstreamSection_UnknownDependencies) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type JobSpecification_Behavior struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retry  *JobSpecification_Behavior_Retry       `protobuf:"bytes,1,opt,name=retry,proto3" json:"retry,omitempty"`
	Notify []*JobSpecification_Behavior_Notifiers `protobuf:"bytes,2,rep,name=notify,proto3" json:"notify,omitempty"`
}

func (x *JobSpecification_Behavior) Reset() {
	*x = JobSpecification_Behavior{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecification_Behavior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecification_Behavior) ProtoMessage() {}

func (x *JobSpecification_Behavior) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecification_Behavior.ProtoReflect.Descriptor instead.
func (*JobSpecification_Behavior) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{19, 2}
}

func (x *JobSpecification_Behavior) GetRetry() *JobSpecification_Behavior_Retry {
	if x != nil {
		return x.Retry
	}
	return nil
}

func (x *JobSpecification_Behavior) GetNotify() []*JobSpecification_Behavior_Notifiers {
	if x != nil {
		return x.Notify
	}
	return nil
}

// retry behaviour if job failed to execute for the first time
type JobSpecification_Behavior_Retry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count              int32                `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Delay              *durationpb.Duration `protobuf:"bytes,2,opt,name=delay,proto3" json:"delay,omitempty"`
	ExponentialBackoff bool                 `protobuf:"varint,3,opt,name=exponential_backoff,json=exponentialBackoff,proto3" json:"exponential_backoff,omitempty"`
}

func (x *JobSpecification_Behavior_Retry) Reset() {
	*x = JobSpecification_Behavior_Retry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecification_Behavior_Retry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecification_Behavior_Retry) ProtoMessage() {}

func (x *JobSpecification_Behavior_Retry) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecification_Behavior_Retry.ProtoReflect.Descriptor instead.
func (*JobSpecification_Behavior_Retry) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{19, 2, 0}
}

func (x *JobSpecification_Behavior_Retry) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *JobSpecification_Behavior_Retry) GetDelay() *durationpb.Duration {
	if x != nil {
		return x.Delay
	}
	return nil
}

func (x *JobSpecification_Behavior_Retry) GetExponentialBackoff() bool {
	if x != nil {
		return x.ExponentialBackoff
	}
	return false
}

// Notifiers are used to set custom alerting in case of job failure/sla_miss
type JobSpecification_Behavior_Notifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	On       JobEvent_Type     `protobuf:"varint,1,opt,name=on,proto3,enum=odpf.optimus.core.v1beta1.JobEvent_Type" json:"on,omitempty"`
	Channels []string          `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	Config   map[string]string `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JobSpecification_Behavior_Notifiers) Reset() {
	*x = JobSpecification_Behavior_Notifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSpecification_Behavior_Notifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpecification_Behavior_Notifiers) ProtoMessage() {}

func (x *JobSpecification_Behavior_Notifiers) ProtoReflect() protoreflect.Message {
	mi := &file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSpecification_Behavior_Notifiers.ProtoReflect.Descriptor instead.
func (*JobSpecification_Behavior_Notifiers) Descriptor() ([]byte, []int) {
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP(), []int{19, 2, 1}
}

func (x *JobSpecification_Behavior_Notifiers) GetOn() JobEvent_Type {
	if x != nil {
		return x.On
	}
	return JobEvent_TYPE_UNSPECIFIED
}

func (x *JobSpecification_Behavior_Notifiers) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *JobSpecification_Behavior_Notifiers) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_odpf_optimus_core_v1beta1_job_spec_proto protoreflect.FileDescriptor

var file_odpf_optimus_core_v1beta1_job_spec_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6f, 0x64, 0x70, 0x66, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x26, 0x6f, 0x64, 0x70, 0x66, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x1d, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f,
	0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x07, 0x22, 0xaa, 0x01, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a,
	0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f,
	0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73,
	0x22, 0x55, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0xb9, 0x01, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x49,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x22, 0xb3, 0x02, 0x0a, 0x11, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a,
	0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8, 0x09, 0x0a, 0x12, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x5b, 0x0a, 0x09, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x61, 0x0a, 0x0b,
	0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x1a,
	0xc3, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x1a, 0xb7, 0x04, 0x0a, 0x0f, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x13, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x5d, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x52, 0x0a, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x5f,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0e, 0x68, 0x74, 0x74,
	0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x84, 0x01, 0x0a, 0x14,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x13, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x1a, 0x53, 0x0a, 0x13, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0xa2, 0x01, 0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d,
	0x75, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0e, 0x64, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x36, 0x0a, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3f, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x22, 0x54, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5e, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x84, 0x01, 0x0a, 0x1d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x54, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x5f, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6a, 0x6f,
	0x62, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d,
	0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x1d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x04,
	0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x1e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4a, 0x6f, 0x62,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x05, 0x22, 0xd9, 0x0c, 0x0a, 0x10,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x50, 0x61,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x12, 0x4c, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x4f,
	0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x3c, 0x0a, 0x05, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x50, 0x0a, 0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52, 0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x39, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb8, 0x04, 0x0a,
	0x08, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x05, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x12, 0x56, 0x0a, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x06, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x1a, 0x7f, 0x0a, 0x05, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x63,
	0x6b, 0x6f, 0x66, 0x66, 0x1a, 0x80, 0x02, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x12, 0x38, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x02, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x62, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x52, 0x0a, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xce, 0x02, 0x0a, 0x0e, 0x48, 0x74, 0x74, 0x70, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x50,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x4d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x63, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65,
	0x63, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x39, 0x0a, 0x0d, 0x4a,
	0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa1, 0x04, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f,
	0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xa7, 0x03, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x5f, 0x4d, 0x49, 0x53, 0x53,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55,
	0x52, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x54, 0x52, 0x59, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4a,
	0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x06,
	0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x09, 0x12,
	0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x10, 0x0c, 0x12,
	0x17, 0x0a, 0x13, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x0e, 0x12,
	0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x4f,
	0x4f, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x10, 0x11, 0x12,
	0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x12, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x4f, 0x4f, 0x4b,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x13, 0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x4a,
	0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f,
	0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x61, 0x69,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x69, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x07,
	0x61, 0x69, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0xbd, 0x01, 0x0a, 0x17, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x49, 0x0a, 0x1d, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x22, 0x42, 0x0a, 0x16, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x69, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22, 0x7d, 0x0a, 0x12, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x05, 0x22, 0x39, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49,
	0x64, 0x22, 0x95, 0x03, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4a,
	0x6f, 0x62, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x08, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4a, 0x6f,
	0x62, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x82, 0x01, 0x0a,
	0x14, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x1a, 0x46, 0x0a, 0x18, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x10, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x4a, 0x6f, 0x62, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x73, 0x0a, 0x1b, 0x6a, 0x6f, 0x62,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x19, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0xa3,
	0x01, 0x0a, 0x18, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x32, 0x9e, 0x11, 0x0a, 0x17, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x93, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4a, 0x6f,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0xbc, 0x01, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x49, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d,
	0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4b, 0x22, 0x46, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x69, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xd8, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x22, 0x3e, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6a, 0x6f, 0x62, 0x3a, 0x01, 0x2a,
	0x12, 0xd3, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x44, 0x22, 0x3f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6a,
	0x6f, 0x62, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xd7, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x4b, 0x12, 0x49, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x7b, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x12, 0x9e, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6a, 0x6f, 0x62,
	0x73, 0x12, 0xe0, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x6f,
	0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4b, 0x2a, 0x49, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x7b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x7b, 0x6a, 0x6f, 0x62, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x12, 0xcf, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e,
	0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12, 0x3e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x6a, 0x6f, 0x62, 0x12, 0xbd, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x29, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x6a, 0x6f, 0x62,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x91, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x38, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4a, 0x6f, 0x62,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x70, 0x0a, 0x0b, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x2d, 0x2e, 0x6f, 0x64, 0x70, 0x66,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4a, 0x6f, 0x62,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e,
	0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4a, 0x6f, 0x62, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x86, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x2e, 0x6f, 0x64, 0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69,
	0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x64,
	0x70, 0x66, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xa2, 0x01, 0x0a, 0x16, 0x69, 0x6f, 0x2e, 0x6f, 0x64, 0x70,
	0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x42, 0x1e, 0x4a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x50, 0x01, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f,
	0x64, 0x70, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6d,
	0x75, 0x73, 0x92, 0x41, 0x45, 0x12, 0x05, 0x32, 0x03, 0x30, 0x2e, 0x31, 0x1a, 0x0e, 0x31, 0x32,
	0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x39, 0x31, 0x30, 0x30, 0x22, 0x04, 0x2f, 0x61,
	0x70, 0x69, 0x2a, 0x01, 0x01, 0x72, 0x23, 0x0a, 0x21, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x75, 0x73,
	0x20, 0x4a, 0x6f, 0x62, 0x20, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescOnce sync.Once
	file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescData = file_odpf_optimus_core_v1beta1_job_spec_proto_rawDesc
)

func file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescGZIP() []byte {
	file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescOnce.Do(func() {
		file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescData = protoimpl.X.CompressGZIP(file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescData)
	})
	return file_odpf_optimus_core_v1beta1_job_spec_proto_rawDescData
}

var file_odpf_optimus_core_v1beta1_job_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_odpf_optimus_core_v1beta1_job_spec_proto_goTypes = []interface{}{
	(JobEvent_Type)(0),                                             // 0: odpf.optimus.core.v1beta1.JobEvent.Type
	(*DeployJobSpecificationRequest)(nil),                          // 1: odpf.optimus.core.v1beta1.DeployJobSpecificationRequest
	(*DeployJobSpecificationResponse)(nil),                         // 2: odpf.optimus.core.v1beta1.DeployJobSpecificationResponse
	(*AddJobSpecificationsRequest)(nil),                            // 3: odpf.optimus.core.v1beta1.AddJobSpecificationsRequest
	(*AddJobSpecificationsResponse)(nil),                           // 4: odpf.optimus.core.v1beta1.AddJobSpecificationsResponse
	(*JobInspectRequest)(nil),                                      // 5: odpf.optimus.core.v1beta1.JobInspectRequest
	(*OptimusDependency)(nil),                                      // 6: odpf.optimus.core.v1beta1.OptimusDependency
	(*JobInspectResponse)(nil),                                     // 7: odpf.optimus.core.v1beta1.JobInspectResponse
	(*CreateJobSpecificationRequest)(nil),                          // 8: odpf.optimus.core.v1beta1.CreateJobSpecificationRequest
	(*CreateJobSpecificationResponse)(nil),                         // 9: odpf.optimus.core.v1beta1.CreateJobSpecificationResponse
	(*GetJobSpecificationRequest)(nil),                             // 10: odpf.optimus.core.v1beta1.GetJobSpecificationRequest
	(*GetJobSpecificationResponse)(nil),                            // 11: odpf.optimus.core.v1beta1.GetJobSpecificationResponse
	(*DeleteJobSpecificationRequest)(nil),                          // 12: odpf.optimus.core.v1beta1.DeleteJobSpecificationRequest
	(*DeleteJobSpecificationResponse)(nil),                         // 13: odpf.optimus.core.v1beta1.DeleteJobSpecificationResponse
	(*ListJobSpecificationRequest)(nil),                            // 14: odpf.optimus.core.v1beta1.ListJobSpecificationRequest
	(*ListJobSpecificationResponse)(nil),                           // 15: odpf.optimus.core.v1beta1.ListJobSpecificationResponse
	(*CheckJobSpecificationRequest)(nil),                           // 16: odpf.optimus.core.v1beta1.CheckJobSpecificationRequest
	(*CheckJobSpecificationResponse)(nil),                          // 17: odpf.optimus.core.v1beta1.CheckJobSpecificationResponse
	(*CheckJobSpecificationsRequest)(nil),                          // 18: odpf.optimus.core.v1beta1.CheckJobSpecificationsRequest
	(*CheckJobSpecificationsResponse)(nil),                         // 19: odpf.optimus.core.v1beta1.CheckJobSpecificationsResponse
	(*JobSpecification)(nil),                                       // 20: odpf.optimus.core.v1beta1.JobSpecification
	(*JobDependency)(nil),                                          // 21: odpf.optimus.core.v1beta1.JobDependency
	(*HttpDependency)(nil),                                         // 22: odpf.optimus.core.v1beta1.HttpDependency
	(*JobSpecHook)(nil),                                            // 23: odpf.optimus.core.v1beta1.JobSpecHook
	(*JobConfigItem)(nil),                                          // 24: odpf.optimus.core.v1beta1.JobConfigItem
	(*JobEvent)(nil),                                               // 25: odpf.optimus.core.v1beta1.JobEvent
	(*JobMetadata)(nil),                                            // 26: odpf.optimus.core.v1beta1.JobMetadata
	(*JobSpecMetadataResource)(nil),                                // 27: odpf.optimus.core.v1beta1.JobSpecMetadataResource
	(*JobSpecMetadataResourceConfig)(nil),                          // 28: odpf.optimus.core.v1beta1.JobSpecMetadataResourceConfig
	(*JobSpecMetadataAirflow)(nil),                                 // 29: odpf.optimus.core.v1beta1.JobSpecMetadataAirflow
	(*RefreshJobsRequest)(nil),                                     // 30: odpf.optimus.core.v1beta1.RefreshJobsRequest
	(*RefreshJobsResponse)(nil),                                    // 31: odpf.optimus.core.v1beta1.RefreshJobsResponse
	(*GetDeployJobsStatusRequest)(nil),                             // 32: odpf.optimus.core.v1beta1.GetDeployJobsStatusRequest
	(*GetDeployJobsStatusResponse)(nil),                            // 33: odpf.optimus.core.v1beta1.GetDeployJobsStatusResponse
	(*DeployJobFailure)(nil),                                       // 34: odpf.optimus.core.v1beta1.DeployJobFailure
	(*GetJobSpecificationsRequest)(nil),                            // 35: odpf.optimus.core.v1beta1.GetJobSpecificationsRequest
	(*GetJobSpecificationsResponse)(nil),                           // 36: odpf.optimus.core.v1beta1.GetJobSpecificationsResponse
	(*JobSpecificationResponse)(nil),                               // 37: odpf.optimus.core.v1beta1.JobSpecificationResponse
	nil,                                                            // 38: odpf.optimus.core.v1beta1.OptimusDependency.HeadersEntry
	(*JobInspectResponse_BasicInfoSection)(nil),                    // 39: odpf.optimus.core.v1beta1.JobInspectResponse.BasicInfoSection
	(*JobInspectResponse_UpstreamSection)(nil),                     // 40: odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection
	(*JobInspectResponse_DownstreamSection)(nil),                   // 41: odpf.optimus.core.v1beta1.JobInspectResponse.DownstreamSection
	(*JobInspectResponse_UpstreamSection_UnknownDependencies)(nil), // 42: odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection.UnknownDependencies
	nil,                                     // 43: odpf.optimus.core.v1beta1.JobSpecification.AssetsEntry
	nil,                                     // 44: odpf.optimus.core.v1beta1.JobSpecification.LabelsEntry
	(*JobSpecification_Behavior)(nil),       // 45: odpf.optimus.core.v1beta1.JobSpecification.Behavior
	(*JobSpecification_Behavior_Retry)(nil), // 46: odpf.optimus.core.v1beta1.JobSpecification.Behavior.Retry
	(*JobSpecification_Behavior_Notifiers)(nil), // 47: odpf.optimus.core.v1beta1.JobSpecification.Behavior.Notifiers
	nil,                         // 48: odpf.optimus.core.v1beta1.JobSpecification.Behavior.Notifiers.ConfigEntry
	nil,                         // 49: odpf.optimus.core.v1beta1.HttpDependency.HeadersEntry
	nil,                         // 50: odpf.optimus.core.v1beta1.HttpDependency.ParamsEntry
	nil,                         // 51: odpf.optimus.core.v1beta1.GetDeployJobsStatusResponse.UnknownDependenciesEntry
	(*Log)(nil),                 // 52: odpf.optimus.core.v1beta1.Log
	(*structpb.Struct)(nil),     // 53: google.protobuf.Struct
	(*durationpb.Duration)(nil), // 54: google.protobuf.Duration
}
var file_odpf_optimus_core_v1beta1_job_spec_proto_depIdxs = []int32{
	20, // 0: odpf.optimus.core.v1beta1.DeployJobSpecificationRequest.jobs:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	52, // 1: odpf.optimus.core.v1beta1.DeployJobSpecificationResponse.log_status:type_name -> odpf.optimus.core.v1beta1.Log
	20, // 2: odpf.optimus.core.v1beta1.AddJobSpecificationsRequest.specs:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	20, // 3: odpf.optimus.core.v1beta1.JobInspectRequest.spec:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	38, // 4: odpf.optimus.core.v1beta1.OptimusDependency.headers:type_name -> odpf.optimus.core.v1beta1.OptimusDependency.HeadersEntry
	39, // 5: odpf.optimus.core.v1beta1.JobInspectResponse.basic_info:type_name -> odpf.optimus.core.v1beta1.JobInspectResponse.BasicInfoSection
	40, // 6: odpf.optimus.core.v1beta1.JobInspectResponse.upstreams:type_name -> odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection
	41, // 7: odpf.optimus.core.v1beta1.JobInspectResponse.downstreams:type_name -> odpf.optimus.core.v1beta1.JobInspectResponse.DownstreamSection
	20, // 8: odpf.optimus.core.v1beta1.CreateJobSpecificationRequest.spec:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	20, // 9: odpf.optimus.core.v1beta1.GetJobSpecificationResponse.spec:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	20, // 10: odpf.optimus.core.v1beta1.ListJobSpecificationResponse.jobs:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	20, // 11: odpf.optimus.core.v1beta1.CheckJobSpecificationRequest.job:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	20, // 12: odpf.optimus.core.v1beta1.CheckJobSpecificationsRequest.jobs:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	52, // 13: odpf.optimus.core.v1beta1.CheckJobSpecificationsResponse.log_status:type_name -> odpf.optimus.core.v1beta1.Log
	24, // 14: odpf.optimus.core.v1beta1.JobSpecification.config:type_name -> odpf.optimus.core.v1beta1.JobConfigItem
	21, // 15: odpf.optimus.core.v1beta1.JobSpecification.dependencies:type_name -> odpf.optimus.core.v1beta1.JobDependency
	43, // 16: odpf.optimus.core.v1beta1.JobSpecification.assets:type_name -> odpf.optimus.core.v1beta1.JobSpecification.AssetsEntry
	23, // 17: odpf.optimus.core.v1beta1.JobSpecification.hooks:type_name -> odpf.optimus.core.v1beta1.JobSpecHook
	44, // 18: odpf.optimus.core.v1beta1.JobSpecification.labels:type_name -> odpf.optimus.core.v1beta1.JobSpecification.LabelsEntry
	45, // 19: odpf.optimus.core.v1beta1.JobSpecification.behavior:type_name -> odpf.optimus.core.v1beta1.JobSpecification.Behavior
	26, // 20: odpf.optimus.core.v1beta1.JobSpecification.metadata:type_name -> odpf.optimus.core.v1beta1.JobMetadata
	22, // 21: odpf.optimus.core.v1beta1.JobDependency.http_dependency:type_name -> odpf.optimus.core.v1beta1.HttpDependency
	49, // 22: odpf.optimus.core.v1beta1.HttpDependency.headers:type_name -> odpf.optimus.core.v1beta1.HttpDependency.HeadersEntry
	50, // 23: odpf.optimus.core.v1beta1.HttpDependency.params:type_name -> odpf.optimus.core.v1beta1.HttpDependency.ParamsEntry
	24, // 24: odpf.optimus.core.v1beta1.JobSpecHook.config:type_name -> odpf.optimus.core.v1beta1.JobConfigItem
	0,  // 25: odpf.optimus.core.v1beta1.JobEvent.type:type_name -> odpf.optimus.core.v1beta1.JobEvent.Type
	53, // 26: odpf.optimus.core.v1beta1.JobEvent.value:type_name -> google.protobuf.Struct
	27, // 27: odpf.optimus.core.v1beta1.JobMetadata.resource:type_name -> odpf.optimus.core.v1beta1.JobSpecMetadataResource
	29, // 28: odpf.optimus.core.v1beta1.JobMetadata.airflow:type_name -> odpf.optimus.core.v1beta1.JobSpecMetadataAirflow
	28, // 29: odpf.optimus.core.v1beta1.JobSpecMetadataResource.request:type_name -> odpf.optimus.core.v1beta1.JobSpecMetadataResourceConfig
	28, // 30: odpf.optimus.core.v1beta1.JobSpecMetadataResource.limit:type_name -> odpf.optimus.core.v1beta1.JobSpecMetadataResourceConfig
	52, // 31: odpf.optimus.core.v1beta1.RefreshJobsResponse.log_status:type_name -> odpf.optimus.core.v1beta1.Log
	34, // 32: odpf.optimus.core.v1beta1.GetDeployJobsStatusResponse.failures:type_name -> odpf.optimus.core.v1beta1.DeployJobFailure
	51, // 33: odpf.optimus.core.v1beta1.GetDeployJobsStatusResponse.unknown_dependencies:type_name -> odpf.optimus.core.v1beta1.GetDeployJobsStatusResponse.UnknownDependenciesEntry
	20, // 34: odpf.optimus.core.v1beta1.GetJobSpecificationsResponse.jobs:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	37, // 35: odpf.optimus.core.v1beta1.GetJobSpecificationsResponse.job_specification_responses:type_name -> odpf.optimus.core.v1beta1.JobSpecificationResponse
	20, // 36: odpf.optimus.core.v1beta1.JobSpecificationResponse.job:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	20, // 37: odpf.optimus.core.v1beta1.JobInspectResponse.BasicInfoSection.job:type_name -> odpf.optimus.core.v1beta1.JobSpecification
	52, // 38: odpf.optimus.core.v1beta1.JobInspectResponse.BasicInfoSection.notice:type_name -> odpf.optimus.core.v1beta1.Log
	6,  // 39: odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection.external_dependency:type_name -> odpf.optimus.core.v1beta1.OptimusDependency
	6,  // 40: odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection.internal_dependency:type_name -> odpf.optimus.core.v1beta1.OptimusDependency
	22, // 41: odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection.http_dependency:type_name -> odpf.optimus.core.v1beta1.HttpDependency
	42, // 42: odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection.unknown_dependencies:type_name -> odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection.UnknownDependencies
	52, // 43: odpf.optimus.core.v1beta1.JobInspectResponse.UpstreamSection.notice:type_name -> odpf.optimus.core.v1beta1.Log
	6,  // 44: odpf.optimus.core.v1beta1.JobInspectResponse.DownstreamSection.downstream_jobs:type_name -> odpf.optimus.core.v1beta1.OptimusDependency
	52, // 45: odpf.optimus.core.v1beta1.JobInspectResponse.DownstreamSection.notice:type_name -> odpf.optimus.core.v1beta1.Log
	46, // 46: odpf.optimus.core.v1beta1.JobSpecification.Behavior.retry:type_name -> odpf.optimus.core.v1beta1.JobSpecification.Behavior.Retry
	47, // 47: odpf.optimus.core.v1beta1.JobSpecification.Behavior.notify:type_name -> odpf.optimus.core.v1beta1.JobSpecification.Behavior.Notifiers
	54, // 48: odpf.optimus.core.v1beta1.JobSpecification.Behavior.Retry.delay:type_name -> google.protobuf.Duration
	0,  // 49: odpf.optimus.core.v1beta1.JobSpecification.Behavior.Notifiers.on:type_name -> odpf.optimus.core.v1beta1.JobEvent.Type
	48, // 50: odpf.optimus.core.v1beta1.JobSpecification.Behavior.Notifiers.config:type_name -> odpf.optimus.core.v1beta1.JobSpecification.Behavior.Notifiers.ConfigEntry
	1,  // 51: odpf.optimus.core.v1beta1.JobSpecificationService.DeployJobSpecification:input_type -> odpf.optimus.core.v1beta1.DeployJobSpecificationRequest
	5,  // 52: odpf.optimus.core.v1beta1.JobSpecificationService.JobInspect:input_type -> odpf.optimus.core.v1beta1.JobInspectRequest
	8,  // 53: odpf.optimus.core.v1beta1.JobSpecificationService.CreateJobSpecification:input_type -> odpf.optimus.core.v1beta1.CreateJobSpecificationRequest
	3,  // 54: odpf.optimus.core.v1beta1.JobSpecificationService.AddJobSpecifications:input_type -> odpf.optimus.core.v1beta1.AddJobSpecificationsRequest
	10, // 55: odpf.optimus.core.v1beta1.JobSpecificationService.GetJobSpecification:input_type -> odpf.optimus.core.v1beta1.GetJobSpecificationRequest
	35, // 56: odpf.optimus.core.v1beta1.JobSpecificationService.GetJobSpecifications:input_type -> odpf.optimus.core.v1beta1.GetJobSpecificationsRequest
	12, // 57: odpf.optimus.core.v1beta1.JobSpecificationService.DeleteJobSpecification:input_type -> odpf.optimus.core.v1beta1.DeleteJobSpecificationRequest
	14, // 58: odpf.optimus.core.v1beta1.JobSpecificationService.ListJobSpecification:input_type -> odpf.optimus.core.v1beta1.ListJobSpecificationRequest
	16, // 59: odpf.optimus.core.v1beta1.JobSpecificationService.CheckJobSpecification:input_type -> odpf.optimus.core.v1beta1.CheckJobSpecificationRequest
	18, // 60: odpf.optimus.core.v1beta1.JobSpecificationService.CheckJobSpecifications:input_type -> odpf.optimus.core.v1beta1.CheckJobSpecificationsRequest
	30, // 61: odpf.optimus.core.v1beta1.JobSpecificationService.RefreshJobs:input_type -> odpf.optimus.core.v1beta1.RefreshJobsRequest
	32, // 62: odpf.optimus.core.v1beta1.JobSpecificationService.GetDeployJobsStatus:input_type -> odpf.optimus.core.v1beta1.GetDeployJobsStatusRequest
	2,  // 63: odpf.optimus.core.v1beta1.JobSpecificationService.DeployJobSpecification:output_type -> odpf.optimus.core.v1beta1.DeployJobSpecificationResponse
	7,  // 64: odpf.optimus.core.v1beta1.JobSpecificationService.JobInspect:output_type -> odpf.optimus.core.v1beta1.JobInspectResponse
	9,  // 65: odpf.optimus.core.v1beta1.JobSpecificationService.CreateJobSpecification:output_type -> odpf.optimus.core.v1beta1.CreateJobSpecificationResponse
	4,  // 66: odpf.optimus.core.v1beta1.JobSpecificationService.AddJobSpecifications:output_type -> odpf.optimus.core.v1beta1.AddJobSpecificationsResponse
	11, // 67: odpf.optimus.core.v1beta1.JobSpecificationService.GetJobSpecification:output_type -> odpf.optimus.core.v1beta1.GetJobSpecificationResponse
	36, // 68: odpf.optimus.core.v1beta1.JobSpecificationService.GetJobSpecifications:output_type -> odpf.optimus.core.v1beta1.GetJobSpecificationsResponse
	13, // 69: odpf.optimus.core.v1beta1.JobSpecificationService.DeleteJobSpecification:output_type -> odpf.optimus.core.v1beta1.DeleteJobSpecificationResponse
	15, // 70: odpf.optimus.core.v1beta1.JobSpecificationService.ListJobSpecification:output_type -> odpf.optimus.core.v1beta1.ListJobSpecificationResponse
	17, // 71: odpf.optimus.core.v1beta1.JobSpecificationService.CheckJobSpecification:output_type -> odpf.optimus.core.v1beta1.CheckJobSpecificationResponse
	19, // 72: odpf.optimus.core.v1beta1.JobSpecificationService.CheckJobSpecifications:output_type -> odpf.optimus.core.v1beta1.CheckJobSpecificationsResponse
	31, // 73: odpf.optimus.core.v1beta1.JobSpecificationService.RefreshJobs:output_type -> odpf.optimus.core.v1beta1.RefreshJobsResponse
	33, // 74: odpf.optimus.core.v1beta1.JobSpecificationService.GetDeployJobsStatus:output_type -> odpf.optimus.core.v1beta1.GetDeployJobsStatusResponse
	63, // [63:75] is the sub-list for method output_type
	51, // [51:63] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_odpf_optimus_core_v1beta1_job_spec_proto_init() }
func file_odpf_optimus_core_v1beta1_job_spec_proto_init() {
	if File_odpf_optimus_core_v1beta1_job_spec_proto != nil {
		return
	}
	file_odpf_optimus_core_v1beta1_status_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployJobSpecificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployJobSpecificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddJobSpecificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddJobSpecificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptimusDependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobSpecificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobSpecificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobSpecificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobSpecificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobSpecificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobSpecificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobSpecificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobSpecificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckJobSpecificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckJobSpecificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckJobSpecificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckJobSpecificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpDependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecHook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobConfigItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecMetadataResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecMetadataResourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecMetadataAirflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeployJobsStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeployJobsStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployJobFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobSpecificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobSpecificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInspectResponse_BasicInfoSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInspectResponse_UpstreamSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInspectResponse_DownstreamSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInspectResponse_UpstreamSection_UnknownDependencies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecification_Behavior); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecification_Behavior_Retry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSpecification_Behavior_Notifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_odpf_optimus_core_v1beta1_job_spec_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_odpf_optimus_core_v1beta1_job_spec_proto_goTypes,
		DependencyIndexes: file_odpf_optimus_core_v1beta1_job_spec_proto_depIdxs,
		EnumInfos:         file_odpf_optimus_core_v1beta1_job_spec_proto_enumTypes,
		MessageInfos:      file_odpf_optimus_core_v1beta1_job_spec_proto_msgTypes,
	}.Build()
	File_odpf_optimus_core_v1beta1_job_spec_proto = out.File
	file_odpf_optimus_core_v1beta1_job_spec_proto_rawDesc = nil
	file_odpf_optimus_core_v1beta1_job_spec_proto_goTypes = nil
	file_odpf_optimus_core_v1beta1_job_spec_proto_depIdxs = nil
}
