name: verify

on:
  pull_request:
  workflow_call:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          skip-go-installation: true
          version: v1.44.1
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - name: test binaries
        run: make test-ci
      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=coverage.txt -service=github
  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: optimus_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:  
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - name: Go module directory
        uses: actions/checkout@v2 
      - name: Test
        run: make integration-test
        env:
          TEST_OPTIMUS_DB_URL: "postgres://postgres:postgres@localhost:5432/optimus_db?sslmode=disable"